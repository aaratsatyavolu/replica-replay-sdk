name: Deploy to CDN

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'build-cdn.js'
      - 'package.json'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'build-cdn.js'
      - 'package.json'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build CDN bundles
        run: npm run build:cdn
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cdn-builds
          path: build/cdn/
          retention-days: 30
          
      - name: Deploy to GitHub Pages (CDN)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/cdn
          destination_dir: cdn
          
      - name: Create Release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## CDN Builds
            
            ### Production Builds
            - **replica-replay.min.js** - Full production build (recommended)
            - **replica-replay-minimal.min.js** - Minimal production build
            - **replica-replay.js** - Unminified production build
            
            ### Development Builds
            - **replica-replay-dev.js** - Development build with debugging
            
            ### Examples
            - [Auto-init with URL params](https://aaratsatyavolu.github.io/replica-replay-sdk/cdn/examples/auto-init-url.html)
            - [Auto-init with data attributes](https://aaratsatyavolu.github.io/replica-replay-sdk/cdn/examples/auto-init-data.html)
            - [Manual initialization](https://aaratsatyavolu.github.io/replica-replay-sdk/cdn/examples/manual-init.html)
            - [Advanced usage](https://aaratsatyavolu.github.io/replica-replay-sdk/cdn/examples/advanced.html)
            
            ### CDN URLs
            ```html
            <!-- Production -->
            <script src="https://aaratsatyavolu.github.io/replica-replay-sdk/cdn/replica-replay.min.js?projectKey=YOUR_KEY&secretKey=YOUR_SECRET"></script>
            
            <!-- Development -->
            <script src="https://aaratsatyavolu.github.io/replica-replay-sdk/cdn/replica-replay-dev.js?projectKey=YOUR_KEY&secretKey=YOUR_SECRET&debug=true"></script>
            ```
          draft: false
          prerelease: false
          
      - name: Comment PR with CDN URLs
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if build directory exists
            const buildDir = path.join(process.cwd(), 'build', 'cdn');
            if (!fs.existsSync(buildDir)) {
              console.log('Build directory not found');
              return;
            }
            
            // List available files
            const files = fs.readdirSync(buildDir);
            const jsFiles = files.filter(file => file.endsWith('.js'));
            
            const comment = `## ðŸŽ¬ CDN Build Preview
            
            ### Available Builds
            ${jsFiles.map(file => `- \`${file}\``).join('\n')}
            
            ### Test URLs
            ${jsFiles.map(file => `- https://aaratsatyavolu.github.io/replica-replay-sdk/cdn/${file}`).join('\n')}
            
            ### Example Usage
            \`\`\`html
            <script src="https://aaratsatyavolu.github.io/replica-replay-sdk/cdn/replica-replay.min.js?projectKey=YOUR_KEY&secretKey=YOUR_SECRET"></script>
            \`\`\`
            
            **Note:** These are preview URLs for testing. Use the main CDN URLs for production.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
